@page "/events"
@inject HttpClient Http
@using System.Net.Http.Json
@using TicketToCode.Core.Models

<div class="container my-4">
    <h2>Kommande Evenemang</h2>

    <input class="form-control mb-3" placeholder="Sök evenemang..." @bind="searchQuery" @oninput="SearchEvents" />

    @if (filteredEvents == null)
    {
        <p>Laddar evenemang...</p>
    }
    else if (!filteredEvents.Any())
    {
        <div class="alert alert-warning">Inga evenemang hittades.</div>
    }
    else
    {
        <div class="list-group">
            @foreach (var ev in filteredEvents)
            {
                <div class="list-group-item">
                    <div class="d-flex justify-content-between align-items-start">
                        <div>
                            <strong>@ev.Name</strong><br />
                            <small>@ev.Description</small><br />
                            <small><i>@ev.StartTime.ToString("g")</i> – @ev.Type</small>
                        </div>
                        <div>
                            <a class="btn btn-primary btn-sm me-2" href="/eventdetails/@ev.Id">Detaljer</a>
                            <a class="btn btn-success btn-sm" href="/book/@ev.Id">Boka</a>
                        </div>
                    </div>
                </div>
            }
        </div>
    }
</div>

@code {
    private List<Event> allEvents;
    private List<Event> filteredEvents;
    private string searchQuery = "";

    protected override async Task OnInitializedAsync()
    {
        allEvents = await Http.GetFromJsonAsync<List<Event>>("events");
        filteredEvents = allEvents;
    }

    private void SearchEvents(ChangeEventArgs e)
    {
        searchQuery = e.Value?.ToString() ?? "";
        filteredEvents = string.IsNullOrWhiteSpace(searchQuery)
            ? allEvents
            : allEvents.Where(ev =>
                ev.Name.Contains(searchQuery, StringComparison.OrdinalIgnoreCase) ||
                ev.Description.Contains(searchQuery, StringComparison.OrdinalIgnoreCase))
            .ToList();
    }
    public class EventResponse
    {
        public int Id { get; set; }
        public string Name { get; set; }
        public DateTime Start { get; set; }
        // Lägg till fler propertys om nödvändigt
    }
}
