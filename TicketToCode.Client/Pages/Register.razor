@page "/register"
@inject HttpClient Http
@inject TicketToCode.Client.Services.UserState UserState
@inject NavigationManager Navigation
@using System.Net.Http.Json
<div class="container my-4" style="max-width: 400px;">
    <h1>Register</h1>
    <div class="mb-3">
        <label for="username" class="form-label">Användarnamn:</label>
        <input id="username" class="form-control" @bind="registerRequest.Username" />
    </div>
    <div class="mb-3">
        <label for="password" class="form-label">Lösenord:</label>
        <input id="password" type="password" class="form-control" @bind="registerRequest.Password" />
    </div>
    <button class="btn btn-primary" @onclick="RegisterUser">Register</button>

    @if (!string.IsNullOrEmpty(message))
    {
        <div class="alert alert-danger mt-3" role="alert">@message</div>
    }
</div>

@code {
    private RegisterRequest registerRequest = new();
    private string message;

    private async Task RegisterUser()
    {
        var response = await Http.PostAsJsonAsync("auth/register", registerRequest);
        if (response.IsSuccessStatusCode)
        {
            var result = await response.Content.ReadFromJsonAsync<RegisterResponse>();
            if (result != null)
            {
                UserState.Username = result.Username;
                UserState.Role = result.Role;
                UserState.UserId = 1; // Exempelvärde
                Navigation.NavigateTo("/");
            }
        }
        else
        {
            message = "Registrering misslyckades. Användarnamnet kan redan finnas.";
        }
    }

    public class RegisterRequest
    {
        public string Username { get; set; } = string.Empty;
        public string Password { get; set; } = string.Empty;
    }

    public class RegisterResponse
    {
        public string Username { get; set; } = string.Empty;
        public string Role { get; set; } = string.Empty;
    }
}
